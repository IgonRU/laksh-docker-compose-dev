version: '3.8'

services:
  nginx:
    container_name: laksh-nginx-container
    restart: unless-stopped
    image: nginx:1.27-alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/laksh-back/nginx-back.conf:/etc/nginx/conf.d/nginx-back.conf # Важно положить именно в conf.d
      - ./docker/laksh-front/default.conf:/etc/nginx/conf.d/nginx-front.conf
      - ./docker/laksh-back/app/src:/srv/www/backend
#      - Нужно добавить volume файлов с фронта (как я понял)
    networks:
      internalnet:
        ipv4_address: 172.120.1.2
    depends_on:
      - laksh-front
      - postgres
      - web
      - pgadmin

  laksh-front:
    restart: always
    container_name: laksh-front-container
    build: docker/laksh-front
    image: laksh-front
    command: /start-front.sh
    ports:
      - "80:80"
    volumes:
      - ./docker/laksh-front/frontend:/app
    networks:
      internalnet:
        ipv4_address: 172.120.1.6

  web:
    build:
       context: ./docker/laksh-back/
       dockerfile: DockerFile
    container_name: laksh-backend-container
    command: bash -c "chmod +x /app/start.sh && /app/start.sh"
    networks:
      internalnet:
        ipv4_address: 172.120.1.3
    volumes:
      - ./docker/laksh-back/app:/app
    env_file:
      - ./docker/laksh-back/app/.env
      - ./docker/postgres/.env

  postgres:
    image: postgres:16.3-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    container_name: laksh-postgres-container
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      - ./docker/postgres/.env
    volumes:
      - habrdb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      internalnet:
        ipv4_address: 172.120.1.10

  pgadmin:
    container_name: laksh-pgadmin-container
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: "habrpguser@habr.com"
      PGADMIN_DEFAULT_PASSWORD: "pgdev752113"
      PGADMIN_DEFAULT_USER: "dev"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      internalnet:
        ipv4_address: 172.120.1.4

volumes:
  habrdb-data:
  pgadmin:

networks:
  internalnet:
    driver: bridge
    ipam:
      config:
        - subnet: 172.120.1.0/24
          gateway: 172.120.1.1