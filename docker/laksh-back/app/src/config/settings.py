"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from os import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = environ.get('DJANGO_SECRET_KEY', 'django-insecure-3s9$cw#y$9ipss$47*)$yoibim57(kr6av7$!mo^3h+k4k4kw2')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = environ.get('DJANGO_DEBUG', 'False').lower() in ('1', 'true', 'yes')
DJANGO_ENV = environ.get('DJANGO_ENV', 'dev').lower()
IS_PROD = DJANGO_ENV == 'prod'

ALLOWED_HOSTS = [h.strip() for h in environ.get('DJANGO_ALLOWED_HOSTS', '0.0.0.0,web,laksh.local,laksh.ru,staging.laksh.ru').split(',') if h.strip()]

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_ROOT = os.path.join(BASE_DIR, "media/")
MEDIA_URL = 'media/'

# SITE_ROOT = os.path.dirname(os.path.realpath(__file__))
STATICFILES_DIRS = [
    BASE_DIR / "dev_static",
    BASE_DIR / "dev_media"
]

# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail',
    'modelcluster',
    'taggit',
    'rest_framework',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pages',
    'projects',
    'apps.api.apps.ApiConfig',
]

# X_FRAME_OPTIONS = "SAMEORIGIN"
# SILENCED_SYSTEM_CHECKS = ["security.W019"]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

# Do not redirect missing trailing slash to slash
APPEND_SLASH = False

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': environ.get('POSTGRES_ENGINE', 'django.db.backends.sqlite3'),
        'NAME': environ.get('POSTGRES_DB', BASE_DIR / 'db.sqlite3'),
        'USER': environ.get('POSTGRES_USER', 'user'),
        'PASSWORD': environ.get('POSTGRES_PASSWORD', 'password'),
        'HOST': environ.get('POSTGRES_HOST', 'localhost'),
        'PORT': environ.get('POSTGRES_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Wagtail settings
WAGTAIL_SITE_NAME = "Laksh CMS"
WAGTAILADMIN_BASE_URL = 'http://laksh.local'

# Search
WAGTAILSEARCH_BACKENDS = {
    'default': {
        'BACKEND': 'wagtail.search.backends.database',
    }
}

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'config.renderers.DataWrapperJSONRenderer',
    ],
}

# CORS
CORS_ALLOWED_ORIGINS = [
    "http://laksh.local",
    "http://laksh.local:5200",
    "https://staging.laksh.ru",
    "https://laksh.ru",
]

CSRF_TRUSTED_ORIGINS = [
    "http://laksh.local",
    "http://laksh.local:5200",
    "https://staging.laksh.ru",
    "https://laksh.ru",
]

# If frontend uses cookies or credentials
CORS_ALLOW_CREDENTIALS = True

# Email
# Во всех режимах, кроме prod, сохраняем письма в файл (config.backends.file_email.FileEmailBackend)
if DJANGO_ENV == 'prod':
    EMAIL_BACKEND = environ.get('EMAIL_BACKEND', 'django.core.mail.backends.smtp.EmailBackend')
else:
    # В non-prod всегда пишем письма в файл, переменная окружения EMAIL_BACKEND игнорируется
    EMAIL_BACKEND = 'config.backends.file_email.FileEmailBackend'
    FILE_EMAIL_OUTPUT = environ.get('FILE_EMAIL_OUTPUT', '/laksh-back/mail-sent.txt')
DEFAULT_FROM_EMAIL = environ.get('DEFAULT_FROM_EMAIL', 'no-reply@laksh.ru')
EMAIL_HOST = environ.get('EMAIL_HOST', '')
EMAIL_PORT = int(environ.get('EMAIL_PORT', '465')) if environ.get('EMAIL_PORT') else (465 if not DEBUG else 25)
EMAIL_HOST_USER = environ.get('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = environ.get('EMAIL_HOST_PASSWORD', '')
EMAIL_USE_TLS = environ.get('EMAIL_USE_TLS', 'False').lower() in ('1', 'true', 'yes')
EMAIL_USE_SSL = environ.get('EMAIL_USE_SSL', 'True').lower() in ('1', 'true', 'yes') if not EMAIL_USE_TLS else False
SERVER_EMAIL = environ.get('SERVER_EMAIL', DEFAULT_FROM_EMAIL)

# Feedback notifications
FEEDBACK_NOTIFY_TO = [e.strip() for e in environ.get('FEEDBACK_NOTIFY_TO', 'mail@laksh.ru').split(',') if e.strip()]
